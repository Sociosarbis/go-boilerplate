package spread

import "sort"

func minMalwareSpread(graph [][]int, initial []int) int {
	n := len(graph)
	marks := make([]int, n)
	sort.Ints(initial)
	for _, num := range initial {
		marks[num] = -1
	}
	counts := make([]int, n)
	for _, num := range initial {
		dfs(graph, num, num+1, marks)
	}
	for i := 0; i < n; i++ {
		if marks[i] > 0 {
			counts[marks[i]-1]++
		}
	}
	n = len(initial)
	ret := initial[0]
	for i := 1; i < n; i++ {
		if counts[initial[i]] > counts[ret] {
			ret = initial[i]
		}
	}
	return ret
}

func dfs(graph [][]int, num, mark int, marks []int) {
	for next, connected := range graph[num] {
		if connected == 1 {
			if marks[next] != -1 && marks[next] != mark {
				if marks[next] == 0 {
					marks[next] = mark
				} else if marks[next] != mark {
					marks[next] = -1
				}
				dfs(graph, next, mark, marks)
			}
		}
	}
}
