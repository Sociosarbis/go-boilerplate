package spread

import "sort"

func minMalwareSpread(graph [][]int, initial []int) int {
	n := len(graph)
	marks := make([]int, n)
	sort.Ints(initial)

	counts := make([]int, n)
	for _, num := range initial {
		mark := marks[num]
		if mark == 0 {
			counts[num] = dfs(graph, num, num+1, marks)
		} else {
			if counts[mark-1] != 0 {
				counts[mark-1] = 0
			}
		}
	}
	n = len(initial)
	index := 0
	for i := 1; i < n; i++ {
		if counts[initial[i]] > counts[initial[index]] {
			index = i
		}
	}
	return initial[index]
}

func dfs(graph [][]int, num, mark int, marks []int) int {
	marks[num] = mark
	ret := 1
	for next, connected := range graph[num] {
		if connected == 1 && marks[next] != mark {
			ret += dfs(graph, next, mark, marks)
		}
	}
	return ret
}
